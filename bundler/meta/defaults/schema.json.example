# This is not actually a json file.
# If you would like to add a library to the defaults, then construct it via
# the following json. This file is based off the terminal-notifier.json file.
# If you think that a utility or library that you want will be used many times,
# then put in a pull request here: https://github.com/shawnrice/alfred-bundler/tree/aries.

# Above all, make sure this is valid json.
# For best practices, make this a json file in your workflow, and call it via the
# __load() function included with the wrapper.

{
"name":"ASSET-NAME",     # Do not duplicate an asset name. Check the "meta/defaults"
                         # folder so as not to duplicate.
"type":"LANGUAGE|utility", # Currently, only php and utility are fully supported.
"versions":{
  "latest":{            # Versions are keys here but also the first value.
    "invoke": "...",     # this is how the workflow invokes it. Often, it's just a path.
    "files":[
     {
      "url":"URL",
      "method":"zip"    # methods: direct, zip, tar.gz, tgz
     }
    ],
    "install":[          # Install instructions. For version "aries" it will be just a
                         # list of shell commands. You can use the flags:
                         # __DATA__ for the bundler data directory
                         # __CACHE__ for the bundler cache directory, and
                         # __FILE__ for any particular needed.
                         # with "cp" always use "-f"; and if it is a .app or a folder,
                         # then use "-fR"; don't use mv.
     "cp -f 'SOME FILE' '__DATA__'"
    ]
  },
  "1.5.0":{              # a numbered version. Bascially everything below is the same.
    "invoke": "terminal-notifier.app/Contents/MacOS/terminal-notifier"
    "files":[
     {
     "url":"https://github.com/shawnrice/Alfred-Helpers/blob/master/terminal-notifier.app.zip?raw=true",
     "method":"zip"
     }
    ],
    "install":[
     "cp -fR '__CACHE__/terminal-notifier.app' '__DATA__'"
    ]
  }
 }
}
